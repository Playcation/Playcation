spring.application.name=Playcation

# spring.jpa.hibernate.ddl-auto=create

# Spring batch
spring.batch.job.enabled=false
spring.batch.jdbc.initialize-schema=never
# spring.batch.jdbc.schema=classpath:org/springframework/batch/core/schema-mysql.sql

# playcation table
spring.datasource.data.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.data.jdbc-url=jdbc:mysql://${DB_URL}:3306/playcation
spring.datasource.data.jdbc-url=${DB_URL_1}
spring.datasource.data.username=${DB_USERNAME}
spring.datasource.data.password=${DB_PASSWORD}

# batch meta table
spring.datasource.meta.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.meta.jdbc-url=jdbc:mysql://${DB_URL}:3306/meta
spring.datasource.meta.jdbc-url=${DB_URL_2}
spring.datasource.meta.username=${DB_USERNAME}
spring.datasource.meta.password=${DB_PASSWORD}

#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.use_sql_comments=true

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

spring.jwt.secret=${JWT_KEY}

cloud.aws.s3.bucket=${S3_IMAGE_BUCKET}
cloud.aws.s3.bucket.game=${S3_GAME_BUCKET}
cloud.aws.stack.auto=false
cloud.aws.region.static=ap-northeast-2
cloud.aws.credentials.access-key=${S3_ACCESSKEY}
cloud.aws.credentials.secret-key=${S3_SECRETKEY}

#registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

#provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email

#registration
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname, account_email

#provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG

spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=6379
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redisson.host=${REDISSON_HOST}
spring.data.redisson.password=${REDISSON_PASSWORD}
spring.testcontainers.enabled=true

spring.main.allow-bean-definition-overriding=true

logging.level.org.springframework.data.redis=DEBUG
logging.level.org.springframework=INFO
# mail
spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=587
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.default-encoding=UTF-8


#toss
payment.toss.test_client_api_key=${TOSS_CLIENT_KEY}
payment.toss.test_secrete_api_key=${TOSS_SECRETE_KEY}
payment.toss.success_url=http://localhost:8080/api/v1/payments/toss/success
payment.toss.fail_url=http://localhost:8080/api/v1/payments/toss/fail

spring.profiles.front_url=http://localhost:3000
spring.profiles.back_url=localhost:8080

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# SpringDoc Swagger UI ??
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.path=/api-ui.html

# SpringDoc API Docs ??
springdoc.api-docs.path=/api-docs

# SpringDoc Actuator ?? ??
springdoc.show-actuator=true

# ?? ?? ?? ??
springdoc.default-produces-media-type=application/json
