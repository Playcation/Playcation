spring.application.name=Playcation

spring.jwt.secret=ajklsehbgasdgaAEVADFG81bar68ghAGE531AG68468g16as1g
#//////////////////
spring.batch.jdbc.initialize-schema=always
spring.datasource.hikari.maximum-pool-size=5

spring.datasource.data.jdbc-url=jdbc:h2:mem:playcation;MODE=MYSQL
spring.datasourc.data.driver-class-name=org.h2.Driver
spring.datasource.data.username=sa
spring.datasource.data.password=0000

spring.datasource.meta.driver-class-name=org.h2.Driver
spring.datasource.meta.jdbc-url=jdbc:h2:mem:meta;MODE=MYSQL
spring.datasource.meta.username=sa
spring.datasource.meta.password=0000

#///////////////////

# JPA(Hibernate)? ???? ??
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.sql.init.mode=always
spring.h2.console.enabled=true
spring.jpa.show-sql=true

cloud.aws.s3.bucket=image
cloud.aws.s3.bucket.game=game
cloud.aws.stack.auto=false
cloud.aws.region.static=ap-northeast-2
cloud.aws.credentials.access-key=test
cloud.aws.credentials.secret-key=test

spring.data.redis.host=host.docker.internal
spring.data.redis.port=6379
spring.data.redis.password=0000
spring.data.redisson.host=host.docker.internal
#spring.data.redisson.host=localhost
spring.data.redisson.password=0000

spring.testcontainers.enabled=true

spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

spring.main.allow-bean-definition-overriding=true

logging.level.org.springframework.data.redis=DEBUG
logging.level.org.springframework.batch=DEBUG
logging.level.org.hibernate.SQL=DEBUG

#registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=clientId
spring.security.oauth2.client.registration.naver.client-secret=clientSecret
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

#provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=googleClientId
spring.security.oauth2.client.registration.google.client-secret=googleClientSecret
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email

spring.profiles.front_url=http://localhost:3000

# mail
spring.mail.host=localhost:1234
spring.mail.port=587
spring.mail.username=1234
spring.mail.password=1234
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.default-encoding=UTF-8

#toss
payment.toss.test_client_api_key=1234
payment.toss.test_secrete_api_key=1234
payment.toss.success_url=http://localhost:8080/api/v1/payments/toss/success
payment.toss.fail_url=http://localhost:8080/api/v1/payments/toss/fail

spring.profiles.back_url=localhost:8080
